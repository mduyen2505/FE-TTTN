import React, { useState, useEffect } from "react";
import { useParams } from "react-router-dom";
import "./ProductDetail.css";
import Header from "../../Components/Header/Header";
import { getProductDetails } from "../../config/ApiConfig";
import FavoriteBorderOutlinedIcon from "@mui/icons-material/FavoriteBorderOutlined";
import FavoriteIcon from "@mui/icons-material/Favorite";
import CloseIcon from "@mui/icons-material/Close"; // Icon ƒë√≥ng modal
import { addToCart } from "../../services/CartService";
import { addToWishlist, removeFromWishlist, getWishlist } from "../../services/WishlistService";

const ProductDetail = () => {
    const { id } = useParams();
    const [product, setProduct] = useState(null);
    const [loading, setLoading] = useState(true);
    const [quantity, setQuantity] = useState(1);
    const [isFavorite, setIsFavorite] = useState(false);
  

    const [showReviewModal, setShowReviewModal] = useState(false); // Tr·∫°ng th√°i hi·ªÉn th·ªã modal


    useEffect(() => {
        const fetchProduct = async () => {
            try {
                const response = await fetch(getProductDetails(id));
                if (!response.ok) throw new Error(`Error: ${response.status}`);

                const data = await response.json();
                setProduct(data);
                setLoading(false);
            } catch (error) {
                console.error("L·ªói khi t·∫£i s·∫£n ph·∫©m:", error);
                setLoading(false);
            }
        };

        const fetchWishlist = async () => {
            const wishlist = await getWishlist();
            setIsFavorite(wishlist.includes(id)); // Ki·ªÉm tra s·∫£n ph·∫©m c√≥ trong wishlist kh√¥ng
        };

        fetchProduct();
        fetchWishlist();
    }, [id]);

    const handleWishlistToggle = async () => {
        if (!localStorage.getItem("token")) {
            alert("Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ th√™m v√†o y√™u th√≠ch!");
            return;
        }

        setIsFavorite(!isFavorite); // C·∫≠p nh·∫≠t UI ngay l·∫≠p t·ª©c

        if (!isFavorite) {
            const success = await addToWishlist(id);
            if (!success) setIsFavorite(false); // Ho√†n t√°c n·∫øu th·∫•t b·∫°i
        } else {
            const success = await removeFromWishlist(id);
            if (!success) setIsFavorite(true); // Ho√†n t√°c n·∫øu th·∫•t b·∫°i
        }
    };

    if (loading) return <p>ƒêang t·∫£i s·∫£n ph·∫©m...</p>;
    if (!product) return <p>S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i.</p>;

    return (
        <>
            <Header />
            <div className="product-detail-container">
                {/* H√¨nh ·∫£nh s·∫£n ph·∫©m */}
                <div className="product-detail-image">
                    {product.image && (
                        <img 
                            src={product.image.startsWith("http") ? product.image : `http://localhost:3000/images/${product.image}`} 
                            alt={product.name} 
                        />
                    )}
                </div>

                {/* Th√¥ng tin s·∫£n ph·∫©m */}
                <div className="product-detail-info-box">
                    <h1>{product.name}</h1>
                    <div className="product-detail-rating">‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ <span>({product.reviewCount} reviews)</span></div>
                    <p className="product-detail-price">
                        {product.discount > 0 ? (
                            <>
                                <span className="product-detail-original-price">{product.price?.toLocaleString()}ƒë</span>
                                <span className="product-detail-discount-price">{product.promotionPrice?.toLocaleString()}ƒë</span>
                            </>
                        ) : (
                            `${product.price?.toLocaleString()}ƒë`
                        )}
                    </p>
                    <p className="product-detail-description">{product.description}</p>
                    {/* N√∫t tƒÉng/gi·∫£m s·ªë l∆∞·ª£ng (ngay d∆∞·ªõi m√¥ t·∫£) */}
                    <div className="product-detail-quantity">
                        <button onClick={() => setQuantity(prev => Math.max(1, prev - 1))}>-</button>
                        <span>{quantity}</span>
                        <button onClick={() => setQuantity(prev => prev + 1)}>+</button>
                    </div>

                    {/* N√∫t th√™m v√†o gi·ªè h√†ng + icon tr√°i tim (c√πng 1 h√†ng) */}
                    <div className="product-detail-actions">
                        <button className="product-detail-add-to-cart"onClick={() => addToCart(product._id)}>Th√™m v√†o gi·ªè</button>
                        <button className="product-detail-favorite" onClick={handleWishlistToggle}>
                            {isFavorite ? <FavoriteIcon style={{ color: "red" }} /> : <FavoriteBorderOutlinedIcon />}
                        </button>
                    </div>
                </div>
            </div>
           
                

            {/* Th√†nh ph·∫ßn s·∫£n ph·∫©m */}
<div className="product-detail-ingredients">
    <h2>Th√†nh ph·∫ßn s·∫£n ph·∫©m</h2>
    {product.ingredients && product.ingredients.length > 0 ? (
        <ul>
            {product.ingredients[0].split(".").map((item, index) => 
                item.trim() ? <li key={index}>‚Ä¢ {item.trim()}.</li> : null
            )}
        </ul>
    ) : (
        <p>Kh√¥ng c√≥ th√¥ng tin th√†nh ph·∫ßn.</p>
    )}
</div>

{/* H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng */}
<div className="product-detail-usage">
    <h2>H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng</h2>
    {product.usageInstructions ? (
        <p>
            {product.usageInstructions.split(".").map((sentence, index) => 
                sentence.trim() ? <span key={index}>‚û§ {sentence.trim()}.<br /></span> : null
            )}
        </p>
    ) : (
        <p>Kh√¥ng c√≥ th√¥ng tin h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng.</p>
    )}
</div>



            {/* ƒê√°nh gi√° s·∫£n ph·∫©m */}
            <div className="product-detail-reviews">
                <h2>ƒê√°nh gi√°</h2>
                <p>ƒê√°nh gi√° trung b√¨nh</p>
                <div className="product-detail-rating-score">
                    <span className="score">5.0</span>
                    <span>‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ</span>
                </div>
                <button className="product-detail-write-review" onClick={() => setShowReviewModal(true)}>Vi·∫øt b√¨nh lu·∫≠n</button>
                <div className="product-detail-comments">
                    <div className="product-detail-comment">
                        <div className="product-detail-user-info">
                            <img src="user1.jpg" alt="User Avatar" className="product-detail-avatar" />
                            <div>
                                <p><strong>Cathy K.</strong> <span className="verified">Verified Reviewer</span></p>
                                <p className="product-detail-star-rating">‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ</p>
                            </div>
                        </div>
                        <p className="product-detail-comment-title">VERY MOISTURIZING</p>
                        <p>I didn‚Äôt know how effective the gel cream would be since I was skeptical of the texture, but my sensitive skin loved it and I didn‚Äôt even break out when I first started using it. Love it!</p>
                        <img src="review-image1.jpg" alt="Review Image" className="product-detail-review-image" />
                        <span className="product-detail-comment-date">26/02/23</span>
                    </div>

                    <div className="product-detail-comment">
                        <div className="product-detail-user-info">
                            <img src="user2.jpg" alt="User Avatar" className="product-detail-avatar" />
                            <div>
                                <p><strong>Aileen R.</strong></p>
                                <p className="product-detail-star-rating">‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ</p>
                            </div>
                        </div>
                        <p className="product-detail-comment-title">REALLY LIGHT AND NOT STICKY.</p>
                        <p>Really light and not sticky. My skin soaked it right up! I mix it with the green tea products and it helps balance my combo skin.</p>
                        <img src="review-image2.jpg" alt="Review Image" className="product-detail-review-image" />
                        <span className="product-detail-comment-date">12/02/23</span>
                    </div>
                </div>
            </div>
            {showReviewModal && (
                <div className="review-modal">
                    <div className="review-modal-content">
                        <button className="review-modal-close" onClick={() => setShowReviewModal(false)}>
                            <CloseIcon />
                        </button>
                        <h2>Write a review</h2>
                        <div className="review-modal-product">
                            <img src="product-image.jpg" alt="Product" />
                            <p>Floral Essence Masks Sets</p>
                        </div>
                        <div className="review-modal-rating">‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ</div>
                        <input type="text" placeholder="Review Title" className="review-input" />
                        <textarea placeholder="What did you think about this product?" className="review-textarea"></textarea>
                        <button className="review-add-photo">üì∑ Add Photos</button>
                        <div className="review-profile">
                            <input type="text" placeholder="Name" />
                            <input type="email" placeholder="Email Address" />
                        </div>
                        <div className="review-login-options">
                            <p>OR</p>
                            <button className="review-sign-in">Sign In</button>
                            <button className="review-google-login">Continue With Google</button>
                        </div>
                        <p className="review-privacy">By continuing you agree to our <a href="#">Privacy Policy</a></p>
                        <button className="review-submit">Agree & Submit</button>
                    </div>
                </div>
            )}
        </>
    );
};

export default ProductDetail;
